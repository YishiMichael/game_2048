@import "fonts/clear-sans.css";

$body_background_color: #faf8ef;
$game_container_background: #bbada0;
$tile_color: #eee4da;
$tile_gold_color: #edc22e;
$tile_gold_glow_color: lighten($tile_gold_color, 15%);
$text_color: #776E65;
$bright_text_color: #f9f6f2;

$tile_boarder_radius: 0.08em;

$transition_speed: 100ms;
$new_tile_animation_speed: 200ms;


// Mixins

@mixin transition($args...) {
  -webkit-transition: $args;
  -moz-transition: $args;
  transition: $args;
}

@mixin transform($args...) {
  -webkit-transform: $args;
  -moz-transform: $args;
  -ms-transform: $args;
  transform: $args;
}

@mixin animation($args...) {
  -webkit-animation: $args;
  -moz-animation: $args;
  animation: $args;
}

@mixin animation_fill_mode($args...) {
  -webkit-animation-fill-mode: $args;
  -moz-animation-fill-mode: $args;
  animation-fill-mode: $args;
}


// Page styles

* {
  margin: 0;
  padding: 0;
  user-select: none;
}

html, body {
  background: $body_background_color;
  color: $text_color;
  font-family: "Clear Sans", "Helvetica Neue", Arial, sans-serif;
  font-size: 18px;
}


.container {
  display: block;
  margin: 80px auto;
}


.heading {
  h1.title {
    display: block;
    float: left;
    margin: 0;
    font-weight: bold;
    font-size: 0.7em;
    line-height: 1em;
  }

  .button_grid {
    display: grid;
    justify-content: end;
    grid-template-columns: 7.2em 2em;
    grid-gap: 0.5em 0.2em;
    font-size: 0.2em;

    .button {
      text-align: center;
      cursor: pointer;
      background: #8f7a66;
      color: $bright_text_color;
      font-weight: bold;
      padding: 0.2em 0;
      border-radius: 0.2em;
    }

    .withdraw_button, .key_bindings_button {
      grid-column-start: span 2;
    }
  }
}


.score_container {
  display: inline-block;
  position: relative;
  float: right;
  font-weight: bold;
  text-align: right;

  background: $game_container_background;
  color: $bright_text_color;
  padding: 0.3em 0.4em;
  font-size: 0.3em;
  border-radius: 0.15em;
  margin: 1.2em 0;

  .score_title {
    display: block;
    position: relative;
    text-transform: uppercase;
    color: $tile_color;
    margin-bottom: 0.3em;
    font-size: 0.5em;
    line-height: 1em;
  }

  .score_value {
    display: block;
    position: relative;
    font-family: Consolas, Monospace;
    line-height: 1em;

    .score_addition {
      position: absolute;
      display: inline;
      right: 0;
      bottom: 0;
      line-height: inherit;
      font-weight: bold;
      color: rgba($text_color, 0.9);

      @keyframes move_up {
        0% {
          bottom: 0;
          opacity: 1;
        }
        100% {
          bottom: 2em;
          opacity: 0;
        }
      }
      @include animation(move_up 600ms ease-in);
      @include animation_fill_mode(both);
    }
  }
}


.game_container {
  display: inline-block;
  position: relative;
  z-index: 1;
  width: inherit;

  .game_message {
    display: none;
    position: absolute;
    flex-direction: column;
    justify-content: center;
    text-align: center;
    z-index: 8;
    border-radius: inherit;
    top: 0;
    right: 0;
    bottom: 0;
    left: 0;
    background: rgba(238, 228, 218, 0.73);
    font-weight: bold;
    font-size: 60%;

    @keyframes fade_in {
      0% {
        opacity: 0;
      }
      100% {
        opacity: 1;
      }
    }
    @include animation(fade_in 800ms ease $transition_speed * 12);
    @include animation_fill_mode(both);

    &.game_over_message {
      display: flex;
    }
  }

  .grid_container {
    display: inline-block;
    position: absolute;
    z-index: 2;
    width: inherit;
    height: inherit;
    border-radius: inherit;
    background: $game_container_background;

    .grid_cell {
      display: inline-block;
      position: absolute;
      z-index: 3;
      background: rgba($tile_color, 0.35);
      width: 1em;
      height: 1em;
      border-radius: $tile_boarder_radius;
    }
  }

  .tile_container {
    display: inline-block;
    position: absolute;
    z-index: 4;
    width: inherit;
    height: inherit;
    border-radius: inherit;

    .tile {
      display: inline-block;
      position: absolute;
      z-index: 5;
      width: 1em;
      height: 1em;

      .tile_inner {
        display: flex;
        z-index: 6;
        align-items: center;
        justify-content: center;
        font-weight: bold;
        width: 1em;
        height: 1em;
        border-radius: $tile_boarder_radius;
      }

      @include transition($transition_speed ease-in-out);
      -webkit-transition-property: -webkit-transform;
      -moz-transition-property: -moz-transform;
      transition-property: transform;

      $limit: 14;
      $background_colors:
        #eee4da,
        #ede0c8,
        #f2b179,
        #f59563,
        #f67c5f,
        #f65e3b,
        #edcf72,
        #edcc61,
        #edc850,
        #edc53f,
        #edc22e,
        #ebb914,
        #d3a612,
        #bc9410;

      // Build tile colors
      @for $value from 1 through $limit {
        &.tile_val_#{$value} .tile_inner {
          @if ($value >= 3) {
            color: $bright_text_color;
          }
          // Set background
          background: nth($background_colors, $value);

          // Add glow
          $glow_opacity: ($value - 4) / 12.6;
          $inset_glow_opacity: min($glow_opacity, 1.0) / 3;
          @if ($value > 7) {
            box-shadow: 0 0 0.28em 0.1em rgba($tile_gold_glow_color, $glow_opacity),
              inset 0 0 0 0.01em rgba(white, $inset_glow_opacity);
          }
        }
      }
    }

    // Tile animations
    .tile_new .tile_inner {
      @keyframes appear {
        0% {
          opacity: 0;
          @include transform(scale(0));
        }
        100% {
          opacity: 1;
          @include transform(scale(1));
        }
      }
      @include animation(appear $new_tile_animation_speed ease $transition_speed);
      @include animation_fill_mode(backwards);
    }

    .tile_merged .tile_inner {
      z-index: 7;
    
      @keyframes pop {
        0% {
          @include transform(scale(0));
        }
        50% {
          @include transform(scale(1.2));
        }
        100% {
          @include transform(scale(1));
        }
      }
      @include animation(pop $new_tile_animation_speed ease $transition_speed);
      @include animation_fill_mode(backwards);
    }
  }
}
